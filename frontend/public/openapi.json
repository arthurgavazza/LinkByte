{'openapi': '3.1.0', 'info': {'title': 'LinkByte API', 'description': 'API for the LinkByte URL shortener', 'version': '0.1.0'}, 'paths': {'/api/links/': {'post': {'tags': ['links'], 'summary': 'Create Link', 'description': 'Create a new shortened link.', 'operationId': 'create_link_api_links__post', 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LinkCreate'}}}}, 'responses': {'201': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LinkResponse'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}, 'get': {'tags': ['links'], 'summary': 'Get Links', 'description': 'Get all links, with optional user filtering.', 'operationId': 'get_links_api_links__get', 'parameters': [{'name': 'skip', 'in': 'query', 'required': False, 'schema': {'type': 'integer', 'default': 0, 'title': 'Skip'}}, {'name': 'limit', 'in': 'query', 'required': False, 'schema': {'type': 'integer', 'default': 100, 'title': 'Limit'}}, {'name': 'user_id', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'User Id'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/LinkResponse'}, 'title': 'Response Get Links Api Links  Get'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/links/{short_code}': {'get': {'tags': ['links'], 'summary': 'Get Link', 'description': 'Get link information by short code.', 'operationId': 'get_link_api_links__short_code__get', 'parameters': [{'name': 'short_code', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Short Code'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LinkResponse'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/links/{link_id}': {'put': {'tags': ['links'], 'summary': 'Update Link', 'description': 'Update an existing link.', 'operationId': 'update_link_api_links__link_id__put', 'parameters': [{'name': 'link_id', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Link Id'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LinkUpdate'}}}}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LinkResponse'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}, 'delete': {'tags': ['links'], 'summary': 'Delete Link', 'description': 'Delete a link.', 'operationId': 'delete_link_api_links__link_id__delete', 'parameters': [{'name': 'link_id', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Link Id'}}], 'responses': {'204': {'description': 'Successful Response'}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/analytics/links/{link_id}/clicks': {'get': {'tags': ['analytics'], 'summary': 'Get Link Clicks', 'description': 'Get click statistics for a specific link.', 'operationId': 'get_link_clicks_api_analytics_links__link_id__clicks_get', 'parameters': [{'name': 'link_id', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Link Id'}}, {'name': 'start_date', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'Start Date'}}, {'name': 'end_date', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'End Date'}}, {'name': 'interval', 'in': 'query', 'required': False, 'schema': {'type': 'string', 'default': 'day', 'title': 'Interval'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ClickStats'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/analytics/links/{link_id}/geo': {'get': {'tags': ['analytics'], 'summary': 'Get Link Geo Stats', 'description': 'Get geographic statistics for a specific link.', 'operationId': 'get_link_geo_stats_api_analytics_links__link_id__geo_get', 'parameters': [{'name': 'link_id', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Link Id'}}, {'name': 'start_date', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'Start Date'}}, {'name': 'end_date', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'End Date'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/GeoStats'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/analytics/links/{link_id}/referrers': {'get': {'tags': ['analytics'], 'summary': 'Get Link Referrers', 'description': 'Get referrer statistics for a specific link.', 'operationId': 'get_link_referrers_api_analytics_links__link_id__referrers_get', 'parameters': [{'name': 'link_id', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Link Id'}}, {'name': 'start_date', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'Start Date'}}, {'name': 'end_date', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'End Date'}}, {'name': 'limit', 'in': 'query', 'required': False, 'schema': {'type': 'integer', 'default': 10, 'title': 'Limit'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ReferrerStats'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/analytics/user/{user_id}/summary': {'get': {'tags': ['analytics'], 'summary': 'Get User Summary', 'description': 'Get analytics summary for a user.', 'operationId': 'get_user_summary_api_analytics_user__user_id__summary_get', 'parameters': [{'name': 'user_id', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'User Id'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': True, 'title': 'Response Get User Summary Api Analytics User  User Id  Summary Get'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/auth/register': {'post': {'tags': ['auth'], 'summary': 'Register', 'description': 'Register a new user.', 'operationId': 'register_api_auth_register_post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserCreate'}}}, 'required': True}, 'responses': {'201': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserResponse'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/auth/login': {'post': {'tags': ['auth'], 'summary': 'Login', 'description': 'Login and get access token as HTTP-only cookie.', 'operationId': 'login_api_auth_login_post', 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'$ref': '#/components/schemas/Body_login_api_auth_login_post'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/auth/refresh': {'post': {'tags': ['auth'], 'summary': 'Refresh Token', 'description': 'Refresh access token using refresh token.', 'operationId': 'refresh_token_api_auth_refresh_post', 'parameters': [{'name': 'refresh_token', 'in': 'cookie', 'required': False, 'schema': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Refresh Token'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/api/auth/logout': {'post': {'tags': ['auth'], 'summary': 'Logout', 'description': 'Logout by clearing auth cookies.', 'operationId': 'logout_api_auth_logout_post', 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}}}}, '/': {'get': {'summary': 'Root', 'description': 'Root endpoint to check if API is running.', 'operationId': 'root__get', 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}}}}, '/health': {'get': {'summary': 'Health Check', 'description': 'Health check endpoint.', 'operationId': 'health_check_health_get', 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}}}}}, 'components': {'schemas': {'Body_login_api_auth_login_post': {'properties': {'grant_type': {'anyOf': [{'type': 'string', 'pattern': 'password'}, {'type': 'null'}], 'title': 'Grant Type'}, 'username': {'type': 'string', 'title': 'Username'}, 'password': {'type': 'string', 'title': 'Password'}, 'scope': {'type': 'string', 'title': 'Scope', 'default': ''}, 'client_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Client Id'}, 'client_secret': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Client Secret'}}, 'type': 'object', 'required': ['username', 'password'], 'title': 'Body_login_api_auth_login_post'}, 'ClickDataPoint': {'properties': {'date': {'type': 'string', 'format': 'date-time', 'title': 'Date'}, 'count': {'type': 'integer', 'title': 'Count'}}, 'type': 'object', 'required': ['date', 'count'], 'title': 'ClickDataPoint', 'description': 'Schema for a single click data point.'}, 'ClickStats': {'properties': {'link_id': {'type': 'string', 'format': 'uuid', 'title': 'Link Id'}, 'total_clicks': {'type': 'integer', 'title': 'Total Clicks'}, 'time_series': {'items': {'$ref': '#/components/schemas/ClickDataPoint'}, 'type': 'array', 'title': 'Time Series'}, 'previous_period_change': {'anyOf': [{'type': 'number'}, {'type': 'null'}], 'title': 'Previous Period Change'}}, 'type': 'object', 'required': ['link_id', 'total_clicks', 'time_series'], 'title': 'ClickStats', 'description': 'Schema for click statistics.'}, 'CountryData': {'properties': {'code': {'type': 'string', 'title': 'Code'}, 'name': {'type': 'string', 'title': 'Name'}, 'count': {'type': 'integer', 'title': 'Count'}, 'percentage': {'type': 'number', 'title': 'Percentage'}}, 'type': 'object', 'required': ['code', 'name', 'count', 'percentage'], 'title': 'CountryData', 'description': 'Schema for country statistics.'}, 'GeoStats': {'properties': {'link_id': {'type': 'string', 'format': 'uuid', 'title': 'Link Id'}, 'total_countries': {'type': 'integer', 'title': 'Total Countries'}, 'countries': {'items': {'$ref': '#/components/schemas/CountryData'}, 'type': 'array', 'title': 'Countries'}}, 'type': 'object', 'required': ['link_id', 'total_countries', 'countries'], 'title': 'GeoStats', 'description': 'Schema for geographic statistics.'}, 'HTTPValidationError': {'properties': {'detail': {'items': {'$ref': '#/components/schemas/ValidationError'}, 'type': 'array', 'title': 'Detail'}}, 'type': 'object', 'title': 'HTTPValidationError'}, 'LinkCreate': {'properties': {'original_url': {'type': 'string', 'maxLength': 2083, 'minLength': 1, 'format': 'uri', 'title': 'Original Url', 'description': 'The original URL to be shortened'}, 'custom_alias': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Custom Alias', 'description': 'Custom alias for the shortened URL'}, 'expires_at': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'Expires At', 'description': 'Expiration date for the link'}, 'is_password_protected': {'type': 'boolean', 'title': 'Is Password Protected', 'description': 'Whether the link is password protected', 'default': False}, 'password': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Password', 'description': 'Password for protected links'}, 'metadata': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'title': 'Metadata', 'description': 'Additional metadata'}}, 'type': 'object', 'required': ['original_url'], 'title': 'LinkCreate', 'description': 'Schema for creating a new link.'}, 'LinkResponse': {'properties': {'original_url': {'type': 'string', 'maxLength': 2083, 'minLength': 1, 'format': 'uri', 'title': 'Original Url', 'description': 'The original URL to be shortened'}, 'custom_alias': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Custom Alias', 'description': 'Custom alias for the shortened URL'}, 'expires_at': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'Expires At', 'description': 'Expiration date for the link'}, 'is_password_protected': {'type': 'boolean', 'title': 'Is Password Protected', 'description': 'Whether the link is password protected', 'default': False}, 'id': {'type': 'string', 'format': 'uuid', 'title': 'Id'}, 'short_code': {'type': 'string', 'title': 'Short Code'}, 'user_id': {'anyOf': [{'type': 'string', 'format': 'uuid'}, {'type': 'null'}], 'title': 'User Id'}, 'is_active': {'type': 'boolean', 'title': 'Is Active'}, 'click_count': {'type': 'integer', 'title': 'Click Count', 'default': 0}, 'created_at': {'type': 'string', 'format': 'date-time', 'title': 'Created At'}, 'updated_at': {'type': 'string', 'format': 'date-time', 'title': 'Updated At'}}, 'type': 'object', 'required': ['original_url', 'id', 'short_code', 'is_active', 'created_at', 'updated_at'], 'title': 'LinkResponse', 'description': 'Schema for link response data.'}, 'LinkUpdate': {'properties': {'original_url': {'anyOf': [{'type': 'string', 'maxLength': 2083, 'minLength': 1, 'format': 'uri'}, {'type': 'null'}], 'title': 'Original Url'}, 'custom_alias': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Custom Alias'}, 'expires_at': {'anyOf': [{'type': 'string', 'format': 'date-time'}, {'type': 'null'}], 'title': 'Expires At'}, 'is_active': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'title': 'Is Active'}, 'is_password_protected': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'title': 'Is Password Protected'}, 'password': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Password'}, 'metadata': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'title': 'Metadata'}}, 'type': 'object', 'title': 'LinkUpdate', 'description': 'Schema for updating an existing link.'}, 'ReferrerData': {'properties': {'source': {'type': 'string', 'title': 'Source'}, 'count': {'type': 'integer', 'title': 'Count'}, 'percentage': {'type': 'number', 'title': 'Percentage'}}, 'type': 'object', 'required': ['source', 'count', 'percentage'], 'title': 'ReferrerData', 'description': 'Schema for referrer statistics.'}, 'ReferrerStats': {'properties': {'link_id': {'type': 'string', 'format': 'uuid', 'title': 'Link Id'}, 'total_referrers': {'type': 'integer', 'title': 'Total Referrers'}, 'referrers': {'items': {'$ref': '#/components/schemas/ReferrerData'}, 'type': 'array', 'title': 'Referrers'}}, 'type': 'object', 'required': ['link_id', 'total_referrers', 'referrers'], 'title': 'ReferrerStats', 'description': 'Schema for referrer statistics.'}, 'UserCreate': {'properties': {'email': {'type': 'string', 'format': 'email', 'title': 'Email', 'description': "User's email address"}, 'username': {'type': 'string', 'title': 'Username', 'description': 'Username for login'}, 'password': {'type': 'string', 'minLength': 8, 'title': 'Password', 'description': "User's password"}}, 'type': 'object', 'required': ['email', 'username', 'password'], 'title': 'UserCreate', 'description': 'Schema for creating a new user.'}, 'UserResponse': {'properties': {'email': {'type': 'string', 'format': 'email', 'title': 'Email', 'description': "User's email address"}, 'username': {'type': 'string', 'title': 'Username', 'description': 'Username for login'}, 'id': {'type': 'string', 'format': 'uuid', 'title': 'Id'}, 'is_active': {'type': 'boolean', 'title': 'Is Active'}, 'is_verified': {'type': 'boolean', 'title': 'Is Verified'}, 'created_at': {'type': 'string', 'title': 'Created At'}}, 'type': 'object', 'required': ['email', 'username', 'id', 'is_active', 'is_verified', 'created_at'], 'title': 'UserResponse', 'description': 'Schema for user response data.'}, 'ValidationError': {'properties': {'loc': {'items': {'anyOf': [{'type': 'string'}, {'type': 'integer'}]}, 'type': 'array', 'title': 'Location'}, 'msg': {'type': 'string', 'title': 'Message'}, 'type': {'type': 'string', 'title': 'Error Type'}}, 'type': 'object', 'required': ['loc', 'msg', 'type'], 'title': 'ValidationError'}}}}
