---
description: Authentication and security best practices
globs: "**/*.{ts,tsx,py}"
alwaysApply: true
---
# Authentication & Security

## Cookie Authentication
- Use HTTP-only cookies for storing tokens
- Set secure flag in production
- Configure SameSite for CSRF protection
- Implement short-lived access tokens (15-30 min)

```python
# Backend cookie configuration
response.set_cookie(
    key="access_token",
    value=token,
    httponly=True,
    secure=True,
    samesite="lax",
    max_age=1800,  # 30 minutes
)
```

## Frontend Integration
- Configure API clients with withCredentials
- Implement token refresh logic
- Add auth state management
- Protect routes based on auth state

```typescript
// Axios interceptor example
api.interceptors.response.use(
  (response) => response,
  async (error) => {
    if (error.response?.status === 401) {
      // Attempt refresh
      await refreshToken()
      // Retry original request
    }
    return Promise.reject(error)
  }
)
```

## Security Best Practices
- Validate all user inputs
- Implement rate limiting
- Use proper error messages
- Log authentication events 